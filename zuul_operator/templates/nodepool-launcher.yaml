---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nodepool-launcher-{{ provider_name }}
  labels:
    app.kubernetes.io/name: nodepool
    app.kubernetes.io/instance: {{ instance_name }}
    app.kubernetes.io/part-of: zuul
    app.kubernetes.io/component: nodepool-launcher
    operator.zuul-ci.org/nodepool-provider: {{ provider_name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: nodepool
      app.kubernetes.io/instance: {{ instance_name }}
      app.kubernetes.io/part-of: zuul
      app.kubernetes.io/component: nodepool-launcher
      operator.zuul-ci.org/nodepool-provider: {{ provider_name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: nodepool
        app.kubernetes.io/instance: {{ instance_name }}
        app.kubernetes.io/part-of: zuul
        app.kubernetes.io/component: nodepool-launcher
        operator.zuul-ci.org/nodepool-provider: {{ provider_name }}
    spec:
      imagePullSecrets: {{ spec.imagePullSecrets }}
      containers:
      - name: launcher
        image: {{ spec.imagePrefix }}/nodepool-launcher:{{ spec.nodepoolImageVersion }}
        env: {{ spec.env | zuul_to_json }}
        volumeMounts:
        - name: nodepool-config
          mountPath: /etc/nodepool
          readOnly: true
        - name: zookeeper-client-tls
          mountPath: /tls/client
          readOnly: true
        {%- for name, c in external_config.items() %}
        - name: {{ name }}
          mountPath: /etc/{{ name }}
          readOnly: true
        {%- endfor %}
      volumes:
      - name: nodepool-config
        secret:
          secretName: {{ nodepool_config_secret_name }}
      - name: zookeeper-client-tls
        secret:
          secretName: zookeeper-client-tls
      {%- for name, c in external_config.items() %}
      - name: {{ name }}
        secret:
          secretName: {{ c['secretName'] }}
      {%- endfor %}
